#!/bin/bash

# wget -O - https://raw.githubusercontent.com/pyPTV/url/master/proxy | bash




# Update the package list
sudo apt update

# Install Squid with OpenSSL support and apache2-utils
sudo apt install squid-openssl apache2-utils -y

# Backup the original Squid configuration file
sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.backup

# Create a directory for the SSL certificate
sudo mkdir -p /etc/squid/ssl_cert

# Generate a private key and a self-signed certificate
sudo openssl req -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/squid/ssl_cert/myCA.key -out /etc/squid/ssl_cert/myCA.crt

# Set appropriate permissions for key and certificate
sudo chmod 400 /etc/squid/ssl_cert/squidCA.key
sudo chmod 400 /etc/squid/ssl_cert/squidCA.crt

# Concatenate the key and certificate into a single PEM file
sudo sh -c 'cat /etc/squid/ssl_cert/squidCA.key /etc/squid/ssl_cert/squidCA.crt > /etc/squid/ssl_cert/squidCA.pem'

# Change ownership and permissions of the SSL certificate directory
sudo chown -R proxy:proxy /etc/squid/ssl_cert/
sudo chmod -R 700 /etc/squid/ssl_cert/

# Initialize the SSL db
sudo -u proxy /usr/lib/squid/security_file_certgen -c -s /var/spool/squid/ssl_db -M 4MB

# Write new Squid configuration with SSL support and fixed port 3128
sudo tee /etc/squid/squid.conf > /dev/null << EOF
# Basic HTTP and HTTPS (with SSL Bump) Port Configuration
http_port 4205 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/ssl_cert/squidCA.pem

# Authentication Configuration
auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwd
auth_param basic children 5
auth_param basic realm Squid proxy-caching web server
auth_param basic credentialsttl 2 hours
auth_param basic casesensitive off

# Access Control List (ACL) Configuration
acl SSL_ports port 443
acl step1 at_step SslBump1
ssl_bump peek step1
ssl_bump splice all
acl authenticated proxy_auth REQUIRED

# Allow authenticated users
http_access allow authenticated

# Anonymity Settings
forwarded_for off
via off
request_header_access Referer deny all
header_replace User-Agent Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0
request_header_access X-Forwarded-For deny all
request_header_access From deny all
request_header_access Accept allow all
request_header_access Accept-Encoding allow all
header_replace Accept-Language en-US,en;q=0.5

# Additional recommended settings for security and performance
http_access deny all
cache deny all
coredump_dir /var/spool/squid
refresh_pattern ^ftp:       1440    20%     10080
refresh_pattern ^gopher:    1440    0%      1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern .           0       20%     4320

# Turning Off All Logging
access_log none
cache_log /dev/null
cache_store_log none
max_filedesc 4096

EOF

echo '1' > /proc/sys/net/ipv4/icmp_echo_ignore_all
echo 'net.ipv4.icmp_echo_ignore_all = 1' >> /etc/sysctl.conf
sysctl -p
# Generate random username and password
# USER MUST BE LOWERCASE
PROXY_USER=$(tr -dc 'a-z' </dev/urandom | head -c 13 ; echo '')
PROXY_PASS=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 13 ; echo '')

# Create the password file with the first user (it will overwrite existing file!)
sudo htpasswd -b -c /etc/squid/passwd $PROXY_USER $PROXY_PASS
sudo chown root:proxy /etc/squid/passwd
sudo chmod 640 /etc/squid/passwd


# Restart Squid to apply the changes
sudo systemctl restart squid

# Enable Squid to start on boot
sudo systemctl enable squid

# Retrieve server IP address
SERVER_IP=$(hostname -I | awk '{print $1}' | tr -d '[:space:]')

# Print the filled proxy details
echo "
proxies = {
    'http': 'http://$PROXY_USER:$PROXY_PASS@$SERVER_IP:4205',
    'https': 'http://$PROXY_USER:$PROXY_PASS@$SERVER_IP:4205'
}
"

# Test the Squid proxy setup using curl with the CA certificate
TEST_URL="https://httpbin.org/ip"
CA_CERT_PATH="/etc/squid/ssl_cert/myCA.pem"

echo "Testing Squid proxy with curl..."
curl --cacert "$CA_CERT_PATH" -x http://$PROXY_USER:$PROXY_PASS@$SERVER_IP:4205 "$TEST_URL"
